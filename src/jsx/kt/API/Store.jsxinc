(function(){



function Store () {
  var state = {}


  this.get = function(itemName) {
    return state[itemName]
  }

  this.set = function(itemName, value) {
    if(state[itemName] === undefined) {
      alert("Store item:'" + itemName + "' doesn't exist")
      return
    } else if (typeof state[itemName] !== typeof value) {
      alert("Can't register '" + itemName + "' in store because it expects: \n'" + typeof state[itemName] + "' \n not \ '" + typeof value + "'' " )
      return
    } else {
      state[itemName] = value;
      return state[itemName]
    }
    
  }

  this.exists = function(name) {
    return state[name] !== undefined
  }

  this.add = function(name, value) {
    if(state[value] !== undefined) {
      alert("Te value '" + name + "' already exists in the store, select another name")
      return
    } else {
      state[name] = value
      return state[name]
    }
  }

  this.delete = function(name) {
    if(state[name] !== undefined) {
      delete state[name]
      return false
    }
  }

  this.storeItem = function(itemType, name) {
    var itemType = _.toClassCase(itemType),
        typeCheck = "is" + itemType,
        getType =  "get" + itemType + "s",
        item = KT.Project[getType](app.project.selection)[0],
        success = false

    if(!_[typeCheck](item)) {
      this.delete(name)
      return success  
    }

    item = this.add(name, item)
    success = _[typeCheck](item);
    return success

  }

  this.list = function() {
    var propiedades = [];
    for (var propiedad in state) {
      propiedades.push(propiedad);
    }
    return propiedades;
  }
}



KT.Store = new Store()


})()


(function(){

function generateTextFromCsv(opts){
  var text = KT.IO.readFileDialog();
  if(!_.isString(text)) { return };
  var rowsSplit = text.match(/[^\r\n]+/g),
      rows = [], comps = [], 
      comp,
      layers,
      layer,
      position,
      bottom = 0;
  
  _.each(rowsSplit, function(row) {
    var row = row.split(',');
    row = _.filter(row, function(word) { 
      return _.isString(word) && word !== ''
    })
    rows.push(row)
  })

  _.each(rows, function(row, i) {
    comp = KT.Project.addComp({name: i +' - ' + row[0]});
    layers = [];
    _.each(row, function(word, i) {
      opts.text = word;
      layer = KT.Text.add(comp, opts);
      bounds = KT.Layers.getBounds(layer);
      position = [layer.position.value[0], layer.position.value[1] - bounds.top];
      position[1] = i === 0 ? position[1] : position[1] + bottom;
      layer.position.setValue(position);
      bounds = KT.Layers.getBounds(layer);
      bottom = bounds.bottom;
      layers.push(layer);
    });
  })
}

KT.Commands.Text.generateFromCsv = generateTextFromCsv;


})();